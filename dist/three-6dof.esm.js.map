{"version":3,"file":"three-6dof.esm.js","sources":["../src/components/three.ts","../src/components/uniforms.ts","../src/components/style.ts","../src/components/density.ts","../src/components/texture.ts","../src/components/viewer.ts"],"sourcesContent":["/**\n * A small wrapper for THREE imports so rollup tree-shakes only the parts we need better\n */\n\nimport {\n    Object3D,\n    Material,\n    ShaderMaterial,\n    TextureLoader,\n    BackSide,\n    Mesh,\n    Points,\n    SphereBufferGeometry,\n} from 'three'\n\nexport {\n    Object3D,\n    Material,\n    ShaderMaterial,\n    TextureLoader,\n    BackSide,\n    Mesh,\n    Points,\n    SphereBufferGeometry,\n}","import { Vector2, Vector4 } from 'three'\n\nexport const Uniforms: object = {\n  map: {\n    type: 't',\n    value: null,\n  },\n  depthMap: {\n    type: 't',\n    value: null,\n  },\n  time: {\n    type: 'f',\n    value: 0.0,\n  },\n  opacity: {\n    type: 'f',\n    value: 1.0,\n  },\n  pointSize: {\n    type: 'f',\n    value: 3.0,\n  },\n  debugDepth: {\n    type: 'f',\n    value: 0.0,\n  },\n  isSeperate: {\n    type: 'b',\n    value: false,\n  },\n  displacement: {\n    type: 'f',\n    value: 1.0,\n  },\n}\n","export enum Style {\n    WIRE,\n    POINTS,\n    MESH,\n}","export enum MeshDensity {\n    LOW = 64,\n    MEDIUM = 128,\n    HIGH = 256,\n    EXTRA_HIGH = 512,\n}","export enum TextureType {\n    TOP_BOTTOM,\n    SEPERATE,\n}","import {\n    Object3D,\n    Material,\n    ShaderMaterial,\n    TextureLoader,\n    BackSide,\n    Mesh,\n    Points,\n    SphereBufferGeometry,\n} from './three'\n\nimport frag from '../shaders/sixdof.frag'\nimport vert from '../shaders/sixdof.vert'\n\nimport { Uniforms } from './uniforms'\nimport { Style } from './style'\nimport { MeshDensity } from './density'\nimport { TextureType } from './texture'\n\nexport default class Viewer extends Object3D {\n    public props: object\n    protected loader: TextureLoader = new TextureLoader()\n    protected obj: Object3D\n    protected geometry: SphereBufferGeometry\n    protected material: Material = new ShaderMaterial({\n        uniforms: Uniforms,\n        vertexShader: vert,\n        fragmentShader: frag,\n        transparent: true,\n        side: BackSide,\n    })\n\n    constructor(\n        texturePath: string = undefined,\n        depthPath?: string,\n        textureType: TextureType = TextureType.SEPERATE,\n        meshDensity: MeshDensity = MeshDensity.HIGH,\n        style: Style = Style.POINTS,\n        displacement: number = 1,\n    ) {\n        super()\n\n        if (!texturePath) {\n            throw new Error('Texture path must be defined when creating a viewer')\n        }\n\n        this.geometry = new SphereBufferGeometry(10, meshDensity, meshDensity)\n\n        this.material.uniforms.displacement.value = displacement\n\n        if (textureType === TextureType.SEPERATE) {\n            if (!depthPath) {\n                throw new Error(\n                    'When using seperate textures you must provide a depth texture as well',\n                )\n            }\n\n            /** Inform the shader we are providing two seperate textures */\n            this.material.uniforms.isSeperate.value = true\n\n            /** Load the depthmap */\n            this.load(depthPath)\n                .then(texture => {\n                    this.material.uniforms.depthMap.value = texture\n                })\n                .catch(err => {\n                    throw new Error(err)\n                })\n        }\n\n        /** Load the texture */\n        this.load(texturePath)\n            .then(texture => {\n                this.material.uniforms.map.value = texture\n            })\n            .catch(err => {\n                throw new Error(err)\n            })\n\n        // Create the Mesh/Points and add it to the viewer object\n        this.obj = this.createSceneObjectWithStyle(style)\n        this.add(this.obj)\n    }\n\n    /** An internal util to create the scene Object3D */\n    protected createSceneObjectWithStyle(style: Style): Object3D {\n        switch (style) {\n            case Style.WIRE:\n                this.material.wireframe = true\n            case Style.MESH:\n                return new Mesh(this.geometry, this.material)\n            case Style.POINTS:\n                return new Points(this.geometry, this.material)\n        }\n    }\n\n    /** Promised wrapper for the TextureLoader */\n    protected load(texturePath: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.loader.load(\n                texturePath,\n                texture => resolve(texture),\n                undefined,\n                () => reject(`Error loading texture error`),\n            )\n        })\n    }\n\n    /** Toggle vieweing texture or depthmap in viewer */\n    public toggleDepthDebug(state?: boolean): void {\n        this.material.uniforms.debugDepth.value =\n            state != undefined ? state : !this.material.uniforms.debugDepth.value\n    }\n\n    /** Setter for displacement amount */\n    public setDisplacement(amount: number): void {\n        this.material.uniforms.displacement.value = amount\n    }\n}"],"names":["Uniforms","map","type","value","depthMap","time","opacity","pointSize","debugDepth","isSeperate","displacement","Style","MeshDensity","TextureType","Viewer","Object3D","constructor","texturePath","undefined","depthPath","textureType","SEPERATE","meshDensity","HIGH","style","POINTS","props","loader","TextureLoader","obj","geometry","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","transparent","side","BackSide","Error","SphereBufferGeometry","load","then","texture","err","createSceneObjectWithStyle","add","WIRE","wireframe","MESH","Mesh","Points","Promise","resolve","reject","toggleDepthDebug","state","setDisplacement","amount"],"mappings":"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"}