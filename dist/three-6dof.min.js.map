{"version":3,"file":"three-6dof.min.js","sources":["../src/components/style.ts","../src/components/density.ts","../src/components/texture.ts","../src/components/uniforms.ts","../src/components/viewer.ts"],"sourcesContent":["export enum Style {\n    WIRE,\n    POINTS,\n    MESH,\n}","export enum MeshDensity {\n    LOW = 64,\n    MEDIUM = 128,\n    HIGH = 256,\n    EXTRA_HIGH = 512,\n}","export enum TextureType {\n    TOP_BOTTOM,\n    SEPERATE,\n}","import { Vector2, Vector4 } from 'three'\n\nexport const Uniforms: object = {\n  map: {\n    type: 't',\n    value: null,\n  },\n  depthMap: {\n    type: 't',\n    value: null,\n  },\n  time: {\n    type: 'f',\n    value: 0.0,\n  },\n  opacity: {\n    type: 'f',\n    value: 1.0,\n  },\n  pointSize: {\n    type: 'f',\n    value: 3.0,\n  },\n  debugDepth: {\n    type: 'f',\n    value: 0.0,\n  },\n  isSeperate: {\n    type: 'b',\n    value: false,\n  },\n  displacement: {\n    type: 'f',\n    value: 1.0,\n  },\n}\n","import {\n    Object3D,\n    Material,\n    ShaderMaterial,\n    TextureLoader,\n    BackSide,\n    Mesh,\n    Points,\n    SphereBufferGeometry,\n} from './three'\n\nimport frag from '../shaders/sixdof.frag'\nimport vert from '../shaders/sixdof.vert'\n\nimport { Uniforms } from './uniforms'\nimport { Style } from './style'\nimport { MeshDensity } from './density'\nimport { TextureType } from './texture'\n\nexport default class Viewer extends Object3D {\n    public props: object\n    protected loader: TextureLoader = new TextureLoader()\n    protected obj: Object3D\n    protected geometry: SphereBufferGeometry\n    protected material: Material = new ShaderMaterial({\n        uniforms: Uniforms,\n        vertexShader: vert,\n        fragmentShader: frag,\n        transparent: true,\n        side: BackSide,\n    })\n\n    constructor(\n        texturePath: string = undefined,\n        depthPath?: string,\n        textureType: TextureType = TextureType.SEPERATE,\n        meshDensity: MeshDensity = MeshDensity.HIGH,\n        style: Style = Style.POINTS,\n        displacement: number = 1,\n    ) {\n        super()\n\n        if (!texturePath) {\n            throw new Error('Texture path must be defined when creating a viewer')\n        }\n\n        this.geometry = new SphereBufferGeometry(10, meshDensity, meshDensity)\n\n        this.material.uniforms.displacement.value = displacement\n\n        if (textureType === TextureType.SEPERATE) {\n            if (!depthPath) {\n                throw new Error(\n                    'When using seperate textures you must provide a depth texture as well',\n                )\n            }\n\n            /** Inform the shader we are providing two seperate textures */\n            this.material.uniforms.isSeperate.value = true\n\n            /** Load the depthmap */\n            this.load(depthPath)\n                .then(texture => {\n                    this.material.uniforms.depthMap.value = texture\n                })\n                .catch(err => {\n                    throw new Error(err)\n                })\n        }\n\n        /** Load the texture */\n        this.load(texturePath)\n            .then(texture => {\n                this.material.uniforms.map.value = texture\n            })\n            .catch(err => {\n                throw new Error(err)\n            })\n\n        // Create the Mesh/Points and add it to the viewer object\n        this.obj = this.createSceneObjectWithStyle(style)\n        this.add(this.obj)\n    }\n\n    /** An internal util to create the scene Object3D */\n    protected createSceneObjectWithStyle(style: Style): Object3D {\n        switch (style) {\n            case Style.WIRE:\n                this.material.wireframe = true\n            case Style.MESH:\n                return new Mesh(this.geometry, this.material)\n            case Style.POINTS:\n                return new Points(this.geometry, this.material)\n        }\n    }\n\n    /** Promised wrapper for the TextureLoader */\n    protected load(texturePath: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.loader.load(\n                texturePath,\n                texture => resolve(texture),\n                undefined,\n                () => reject(`Error loading texture error`),\n            )\n        })\n    }\n\n    /** Toggle vieweing texture or depthmap in viewer */\n    public toggleDepthDebug(state?: boolean): void {\n        this.material.uniforms.debugDepth.value =\n            state != undefined ? state : !this.material.uniforms.debugDepth.value\n    }\n\n    /** Setter for displacement amount */\n    public setDisplacement(amount: number): void {\n        this.material.uniforms.displacement.value = amount\n    }\n}"],"names":["Style","MeshDensity","TextureType","Uniforms","map","type","value","depthMap","time","opacity","pointSize","debugDepth","isSeperate","displacement","Viewer","Object3D","constructor","texturePath","undefined","depthPath","textureType","SEPERATE","meshDensity","HIGH","style","POINTS","props","loader","TextureLoader","obj","geometry","material","ShaderMaterial","uniforms","vertexShader","vert","fragmentShader","frag","transparent","side","BackSide","Error","SphereBufferGeometry","load","then","texture","_this","err","this","createSceneObjectWithStyle","add","WIRE","wireframe","MESH","Mesh","Points","Promise","resolve","reject","_this2","toggleDepthDebug","state","setDisplacement","amount"],"mappings":"2OAAYA,ECAAC,ECAAC,o8BCECC,EAAmB,CAC9BC,IAAK,CACHC,KAAM,IACNC,MAAO,MAETC,SAAU,CACRF,KAAM,IACNC,MAAO,MAETE,KAAM,CACJH,KAAM,IACNC,MAAO,GAETG,QAAS,CACPJ,KAAM,IACNC,MAAO,GAETI,UAAW,CACTL,KAAM,IACNC,MAAO,GAETK,WAAY,CACVN,KAAM,IACNC,MAAO,GAETM,WAAY,CACVP,KAAM,IACNC,OAAO,GAETO,aAAc,CACZR,KAAM,IACNC,MAAO,cHjCCN,GAAAA,EAAAA,iBAAAA,EAAAA,qBAAAA,EAAAA,kBAAAA,IAAAA,QCAAC,EAAAA,gBAAAA,mBAAAA,gBAAAA,EAAAA,uBAAAA,EAAAA,mBAAAA,EAAAA,gCCAAC,EAAAA,gBAAAA,mBAAAA,6BAAAA,EAAAA,yBEmBG,MAAMY,UAAeC,WAahCC,oBACIC,8DAAsBC,EACtBC,yCACAC,yDAA2BlB,cAAYmB,SACvCC,yDAA2BrB,cAAYsB,KACvCC,yDAAexB,EAAMyB,OACrBZ,yDAAuB,yBAlBpBa,kBACGC,OAAwB,IAAIC,qBAC5BC,gBACAC,qBACAC,SAAqB,IAAIC,iBAAe,CAC9CC,SAAU9B,EACV+B,aAAcC,EACdC,eAAgBC,EAChBC,aAAa,EACbC,KAAMC,cAaDvB,QACK,IAAIwB,MAAM,+DAGfX,SAAW,IAAIY,uBAAqB,GAAIpB,EAAaA,QAErDS,SAASE,SAASpB,aAAaP,MAAQO,EAExCO,IAAgBlB,cAAYmB,SAAU,KACjCF,QACK,IAAIsB,MACN,8EAKHV,SAASE,SAASrB,WAAWN,OAAQ,OAGrCqC,KAAKxB,GACLyB,MAAK,SAAAC,GACFC,EAAKf,SAASE,SAAS1B,SAASD,MAAQuC,YAErC,SAAAE,SACG,IAAIN,MAAMM,WAKvBJ,KAAK1B,GACL2B,MAAK,SAAAC,GACFC,EAAKf,SAASE,SAAS7B,IAAIE,MAAQuC,YAEhC,SAAAE,SACG,IAAIN,MAAMM,WAInBlB,IAAMmB,KAAKC,2BAA2BzB,QACtC0B,IAAIF,KAAKnB,KAIRoB,2BAA2BzB,UACzBA,QACCxB,EAAMmD,UACFpB,SAASqB,WAAY,OACzBpD,EAAMqD,YACA,IAAIC,OAAKN,KAAKlB,SAAUkB,KAAKjB,eACnC/B,EAAMyB,cACA,IAAI8B,SAAOP,KAAKlB,SAAUkB,KAAKjB,WAKxCY,KAAK1B,qBACJ,IAAIuC,SAAQ,SAACC,EAASC,GACzBC,EAAKhC,OAAOgB,KACR1B,GACA,SAAA4B,UAAWY,EAAQZ,UACnB3B,GACA,kBAAMwC,uCAMXE,iBAAiBC,QACf9B,SAASE,SAAStB,WAAWL,MACrBY,MAAT2C,EAAqBA,GAASb,KAAKjB,SAASE,SAAStB,WAAWL,MAIjEwD,gBAAgBC,QACdhC,SAASE,SAASpB,aAAaP,MAAQyD"}